% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ai_validate.R
\name{ai_validate}
\alias{ai_validate}
\title{Starts an interactive app to manually validate the output of an LLM
stored in a character vector}
\usage{
ai_validate(
  text,
  llm_output,
  llm_evidence = NULL,
  result_env = new.env(),
  ...,
  verbose = TRUE
)
}
\arguments{
\item{text}{a character or \link[quanteda:corpus]{quanteda::corpus} object containing the
documents to be manually validated}

\item{llm_output}{a character string; the name of the LLM output column which
contains the summaries, labels, or scores to be validated}

\item{llm_evidence}{a character vector; the name of an additional LLM output
such as evidence or justifications provided by the LLM}

\item{result_env}{An environment to store results and allow resuming}

\item{...}{additional arguments passed to \code{chat_fn}}

\item{verbose}{logical; output a progress indicator if \code{TRUE}}
}
\value{
character; the response from the manual validation with a length
equal to the number of input documents, with the elements named with the
input element names
}
\description{
This function launches a Shiny app that allows users to manually validate
the output of a LLM analysis, such as ai_score
The comments from manual validation for each text are added as an additional
docvar to the input data with all texts not yet validated as \code{NA}.
}
\examples{
\dontrun{
library(quanteda)
summ1 <- ai_summarize(data_char_ukimmig2010, chat_fn = chat_ollama, model = "llama3.2")
summ2 <- ai_summarize(data_corpus_inaugural[1:2], chat_fn = chat_openai,
                api_args = list(temperature = 0, seed = 42))
validate1 <- ai_validate(data_char_ukimmig2010, llm_output = summ1, verbose = TRUE)
validate2 <- ai_validate(data_corpus_inaugural[1:2], llm_output = summ2, verbose = TRUE)
}
}
